{"version":3,"sources":["../src/index.js"],"names":["require","Client","dbConfig","env","process","configApproved","hasOwnProperty","PG_USER","PG_PASSWORD","PG_HOST","console","log","PG_PORT","PG_DB","exit","client","host","port","user","password","database","connect","DEBUG","err","stack","$","set","e","message"],"mappings":";;;;;;AAAA;;eACmBA,QAAQ,IAAR,C;IAAXC,M,YAAAA,M;;kBAEO,YAAM;AACjB,QAAG;AACC,YAAIC,WAAW,EAAf;AACA,YAAIC,MAAMC,QAAQD,GAAlB;AACA,YAAIE,iBAAiB,IAArB;;AAEA,YAAGF,IAAIG,cAAJ,CAAmB,SAAnB,KAAiC,CAAC,CAACH,IAAII,OAA1C,EACIL,SAAS,SAAT,IAAsBC,IAAII,OAA1B;;AAEJ,YAAGJ,IAAIG,cAAJ,CAAmB,aAAnB,KAAqC,CAAC,CAACH,IAAIK,WAA9C,EACIN,SAAS,aAAT,IAA0BC,IAAIK,WAA9B;;AAEJ,YAAGL,IAAIG,cAAJ,CAAmB,SAAnB,KAAiC,CAAC,CAACH,IAAIM,OAA1C,EACIP,SAAS,SAAT,IAAsBC,IAAIM,OAA1B,CADJ,KAEK;AACDJ,6BAAiB,KAAjB;AACAK,oBAAQC,GAAR,CAAY,iEAAZ;AACH;;AAED,YAAGR,IAAIG,cAAJ,CAAmB,SAAnB,KAAiC,CAAC,CAACH,IAAIS,OAA1C,EACIV,SAAS,SAAT,IAAsBC,IAAIS,OAA1B,CADJ,KAEK;AACDP,6BAAiB,KAAjB;AACAK,oBAAQC,GAAR,CAAY,iEAAZ;AACH;;AAED,YAAGR,IAAIG,cAAJ,CAAmB,OAAnB,KAA+B,CAAC,CAACH,IAAIU,KAAxC,EACIX,SAAS,OAAT,IAAoBC,IAAIU,KAAxB,CADJ,KAEK;AACDR,6BAAiB,KAAjB;AACAK,oBAAQC,GAAR,CAAY,8DAAZ;AACH;;AAED,YAAG,CAACN,cAAJ,EAAmB;AACfK,oBAAQC,GAAR,CAAY,qFAAZ;AACAP,oBAAQU,IAAR,CAAa,CAAC,CAAd;AACH,SAHD,MAIK;AACD,gBAAI;AACA,oBAAMC,SAAS,IAAId,MAAJ,CAAW;AACtBe,0BAAMd,SAAS,SAAT,CADgB;AAEtBe,0BAAMf,SAAS,SAAT,CAFgB;AAGtBgB,0BAAMhB,SAAS,SAAT,CAHgB;AAItBiB,8BAAUjB,SAAS,aAAT,CAJY;AAKtBkB,8BAAUlB,SAAS,OAAT;AALY,iBAAX,CAAf;;AAQAa,uBAAOM,OAAP,CAAe,eAAO;AAClB,wBAAGjB,QAAQD,GAAR,CAAYmB,KAAZ,IAAqB,MAAxB,EAA+B;AAC3B,4BAAIC,GAAJ,EACIb,QAAQC,GAAR,qBAAgCY,IAAIC,KAApC,EADJ,KAEI;AACAd,oCAAQC,GAAR;AACAc,qCAAEC,GAAF,CAAM,IAAN,EAAYX,MAAZ;AACH;AAEJ;AACJ,iBAVD;AAWH,aApBD,CAqBA,OAAOY,CAAP,EAAU;AACNjB,wBAAQC,GAAR,uBAAgCgB,EAAEC,OAAlC;AACH;AACJ;AACJ,KA9DD,CA+DA,OAAOD,CAAP,EAAU;AACNjB,gBAAQC,GAAR,uBAAgCgB,EAAEC,OAAlC;AACH;AACJ,C","file":"index.js","sourcesContent":["import { $ } from \"@dekproject/scope\";\r\nconst { Client } = require('pg');\r\n\r\nexport default () => {\r\n    try{\r\n        let dbConfig = {};\r\n        let env = process.env;\r\n        let configApproved = true;\r\n\r\n        if(env.hasOwnProperty('PG_USER') || !!env.PG_USER)\r\n            dbConfig['PG_USER'] = env.PG_USER\r\n\r\n        if(env.hasOwnProperty('PG_PASSWORD') || !!env.PG_PASSWORD)\r\n            dbConfig['PG_PASSWORD'] = env.PG_PASSWORD\r\n\r\n        if(env.hasOwnProperty('PG_HOST') && !!env.PG_HOST)\r\n            dbConfig['PG_HOST'] = env.PG_HOST\r\n        else {\r\n            configApproved = false\r\n            console.log('[ PostgreSQL ] - There is no PG_HOST variable in the .env file.')\r\n        }\r\n\r\n        if(env.hasOwnProperty('PG_PORT') && !!env.PG_PORT)\r\n            dbConfig['PG_PORT'] = env.PG_PORT\r\n        else {\r\n            configApproved = false\r\n            console.log('[ PostgreSQL ] - There is no PG_PORT variable in the .env file.')\r\n        }\r\n        \r\n        if(env.hasOwnProperty('PG_DB') && !!env.PG_DB)\r\n            dbConfig['PG_DB'] = env.PG_DB\r\n        else {\r\n            configApproved = false\r\n            console.log('[ PostgreSQL ] - There is no PG_DB variable in the .env file')\r\n        }\r\n\r\n        if(!configApproved){\r\n            console.log('[ PostgreSQL ] - Please correct the above errors before restarting the application.')\r\n            process.exit(-1);\r\n        }\r\n        else {\r\n            try {\r\n                const client = new Client({\r\n                    host: dbConfig['PG_HOST'],\r\n                    port: dbConfig['PG_PORT'],\r\n                    user: dbConfig['PG_USER'],\r\n                    password: dbConfig['PG_PASSWORD'],\r\n                    database: dbConfig['PG_DB']\r\n                });\r\n\r\n                client.connect(err => {\r\n                    if(process.env.DEBUG == 'true'){\r\n                        if (err)\r\n                            console.log(`[ PostgreSQL ] -`, err.stack);\r\n                        else{\r\n                            console.log(`[ PostgreSQL ] - PostgreSQL successfully signed`);    \r\n                            $.set(\"pg\", client);    \r\n                        }\r\n                                    \r\n                    } \r\n                });\r\n            }\r\n            catch (e) {\r\n                console.log(`[ PostgreSQL ] - ${e.message}`);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(`[ PostgreSQL ] - ${e.message}`);\r\n    }\r\n}\r\n"]}